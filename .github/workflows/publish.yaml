name: Publish

on:
  push:
    branches:
      - main
      - next
      - next-major
      - beta
      - alpha
      - '+([0-9])?(.{+([0-9]),x}).x'
  workflow_dispatch:
    inputs:
      dry_run:
        description: Run in dry-run mode (no actual publishing)
        required: false
        default: false
        type: boolean

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: false

env:
  NODE_VERSION_FILE: .node-version

jobs:
  validate-secrets:
    name: Validate Secrets
    runs-on: ubuntu-latest
    outputs:
      has-github-token: ${{ steps.check-secrets.outputs.has-github-token }}
      has-vsce-token: ${{ steps.check-secrets.outputs.has-vsce-token }}
      has-ovsx-token: ${{ steps.check-secrets.outputs.has-ovsx-token }}
      has-npm-token: ${{ steps.check-secrets.outputs.has-npm-token }}
    steps:
      - name: Check required secrets
        id: check-secrets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
          OVSX_TOKEN: ${{ secrets.OVSX_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "has-github-token=$([[ -n $GITHUB_TOKEN ]] && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "has-vsce-token=$([[ -n $VSCE_TOKEN ]] && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "has-ovsx-token=$([[ -n $OVSX_TOKEN ]] && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "has-npm-token=$([[ -n $NPM_TOKEN ]] && echo true || echo false)" >> $GITHUB_OUTPUT

          echo "GITHUB_TOKEN available: $([[ -n $GITHUB_TOKEN ]] && echo true || echo false)"
          echo "VSCE_TOKEN available: $([[ -n $VSCE_TOKEN ]] && echo true || echo false)"
          echo "OVSX_TOKEN available: $([[ -n $OVSX_TOKEN ]] && echo true || echo false)"
          echo "NPM_TOKEN available: $([[ -n $NPM_TOKEN ]] && echo true || echo false)"

  pre-release-validation:
    name: Pre-Release Validation
    runs-on: ubuntu-latest
    needs: validate-secrets
    strategy:
      fail-fast: true
      matrix:
        validation:
          - lint
          - test
          - test-web
          - build
          - bundle-size
          - manifest
          - dual-target
          # Integration fails because there's no X server running
          # - integration
          - vulnerabilities

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0

      - name: Setup Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          cache: pnpm
          node-version-file: ${{ env.NODE_VERSION_FILE }}

      - name: Install dependencies
        run: pnpm bootstrap

      - name: Run lint
        if: matrix.validation == 'lint'
        run: pnpm lint

      - name: Run tests
        if: matrix.validation == 'test'
        run: pnpm test

      - name: Run web tests
        if: matrix.validation == 'test-web'
        run: pnpm test:web

      - name: Build
        if: matrix.validation == 'build'
        run: pnpm build

      - name: Validate bundle size
        if: matrix.validation == 'bundle-size'
        run: |
          pnpm build
          pnpm exec tsx scripts/publish-utils.ts --bundle-size-only

      - name: Validate manifest
        if: matrix.validation == 'manifest'
        run: pnpm exec tsx scripts/publish-utils.ts --manifest-only

      - name: Validate dual-target build
        if: matrix.validation == 'dual-target'
        run: |
          pnpm build
          pnpm exec tsx scripts/publish-utils.ts --dual-target-only

      - name: Run integration tests
        if: matrix.validation == 'integration'
        run: |
          pnpm build
          pnpm exec tsx scripts/publish-utils.ts --integration-only

      - name: Scan vulnerabilities
        if: matrix.validation == 'vulnerabilities'
        run: pnpm exec tsx scripts/publish-utils.ts --vulnerabilities-only

      - name: Upload build artifacts
        if: matrix.validation == 'build'
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: build-artifacts
          path: |
            out/
            package.json
            README.md
            LICENSE.md
            CHANGELOG.md
          retention-days: 7

  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: [validate-secrets, pre-release-validation]
    if: needs.validate-secrets.outputs.has-github-token == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0

      - name: Setup Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          cache: pnpm
          node-version-file: ${{ env.NODE_VERSION_FILE }}

      - name: Install dependencies
        run: pnpm bootstrap

      - name: Build for release
        run: pnpm build

      - name: Create dist directory
        run: mkdir -p dist

      - name: Run semantic-release (dry-run)
        if: github.event.inputs.dry_run == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
          OVSX_TOKEN: ${{ secrets.OVSX_TOKEN }}
        run: pnpm semantic-release:dry-run

      - name: Run semantic-release
        if: github.event.inputs.dry_run != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
          OVSX_TOKEN: ${{ secrets.OVSX_TOKEN }}
        run: pnpm semantic-release

      - name: Upload release artifacts
        if: always()
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: release-artifacts-${{ github.sha }}
          path: |
            dist/
            CHANGELOG.md
            package.json
          retention-days: 30
