name: ci

on:
  push:
    branches: [main, 'renovate/**']
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 16

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Configure
        shell: bash
        run: |
          npm config set scripts-prepend-node-path true
          echo "Node $(node --version)"
          echo "Yarn $(yarn --version)"

      - name: Checkout
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Get Yarn cache
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Use Yarn cache
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # tag=v3.0.11
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            **/.eslintcache
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-

      - name: Clear Yarn cache
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          rm -rf .eslintcache
          rm -rf node_modules
          yarn cache clean

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run tests
        run: yarn test
